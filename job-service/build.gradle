plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.workwhile'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = "2024.0.1"
    lombokVersion = "1.18.30"
    logbackEncoderVersion = "7.4"
    mapstructVersion = "1.5.5.Final"
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Add these specific Jersey dependencies - match exactly the user-service configuration
    implementation 'org.glassfish.jersey.core:jersey-client:3.1.10'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.10'
    implementation 'org.glassfish.jersey.connectors:jersey-apache-connector:3.1.10'

    // Also add webflux which might be used by Spring Cloud
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
// JWT Dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // Keep your existing Spring Cloud configuration
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // Add this to your dependencies section
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Utilities
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"

    // Annotation processors
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:4.9.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}